{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/serach-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","serachFiled","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,YCIFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,KAApB,SACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCFKC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJ7CM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACAZ,UAAY,SACZa,KAAK,SAASF,YAAaA,EAC3BG,SAAUF,MCsCCG,G,wDAvCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,SAAS,GACTS,YAAY,IALH,E,qDAQb,WAAoB,IAAD,OACfC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,oBAG5C,WAAS,IAAD,SAC0BE,KAAKR,MAA9BR,EADD,EACCA,SAASS,EADV,EACUA,YACVQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYY,wBAIlD,OAEE,sBAAK7B,UAAU,MAAf,UACI,oDAEA,cAAC,EAAD,CACEW,YAAc,kBACdC,aAAgB,SAAAkB,GAAC,OAAI,EAAKP,SAAS,CAACN,YAAaa,EAAEC,OAAOC,WAG9D,cAAC,EAAD,CAAUxB,SAAWiB,W,GAhCXQ,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3829d823.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className =\"card-container\">   \r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2> {props.monster.name}   </h2>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n\r\n)\r\n","import React from 'react';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => { \r\n    return <div className='card-list'>\r\n        {props.monsters.map(monster => <Card key={monster.id} monster={monster}/> )}\r\n\r\n    </div>;  \r\n};\r\n ","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange }) => (\r\n    <input \r\n    className = 'search'\r\n    type='search' placeholder={placeholder}\r\n    onChange={handleChange } />\r\n\r\n)\r\n","import logo from './logo.svg';\nimport React,{ Component } from 'react'; \nimport {CardList} from \"./components/card-list/card-list.component\"\nimport {SearchBox} from './components/serach-box/search-box.component'\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters:[],\n      serachFiled:''\n    }\n  }\n  componentDidMount(){\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}))\n  }\n\n  render(){\n    const{ monsters,serachFiled } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(serachFiled.toLocaleLowerCase())\n\n    );\n\n    return (\n\n      <div className=\"App\"> \n          <h1>monsters Rolodox  </h1>\n\n          <SearchBox\n            placeholder = 'search monsters'\n            handleChange = {e => this.setState({serachFiled: e.target.value })}\n          />\n\n        <CardList monsters= {filteredMonsters} /> \n      </div>\n    );\n\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}